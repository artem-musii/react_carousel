{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","frameSize","step","itemWidth","animationDuration","infinite","this","images","props","className","disabled","type","onClick","setState","length","Math","max","style","width","transform","transition","map","image","index","src","alt","min","value","onChange","event","Number","currentTarget","checked","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"uPAgBaA,EAAb,4MACEC,MAAQ,CACNC,SAAU,EACVC,UAAW,EACXC,KAAM,EACNC,UAAW,IACXC,kBAAmB,EACnBC,UAAU,GAPd,4CAUE,WAAU,IAAD,OACP,EAOIC,KAAKP,MANPC,EADF,EACEA,SACAE,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAF,EAJF,EAIEA,UACAG,EALF,EAKEA,kBACAC,EANF,EAMEA,SAEME,EAAWD,KAAKE,MAAhBD,OAwBR,OACE,sBAAKE,UAAU,WAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,wBACEC,SAAuB,IAAbV,IAAmBK,EAC7BI,UAAU,SACVE,KAAK,SACLC,QAjBgB,WAClBP,GAAyB,IAAbL,EACd,EAAKa,SAAS,CACZb,SAAUO,EAAOO,OAASb,IAG5B,EAAKY,SAAS,CAAEb,SAAUe,KAAKC,IAAIhB,EAAWE,EAAM,MAOlD,SAMG,MAGH,qBACEO,UAAU,2BACVQ,MACE,CACEC,MAAM,GAAD,OAAKf,EAAYF,EAAjB,OAJX,SAQE,oBACEQ,UAAU,iBACVQ,MACE,CACEE,UAAU,eAAD,OAAiBnB,EAAWG,EAA5B,OACTiB,WAAW,aAAD,OAAehB,EAAf,MALhB,SASGG,EAAOc,KAAI,SAACC,EAAOC,GAAR,OACV,6BACE,qBACEC,IAAKF,EACLG,IAAG,UAAKF,EAAQ,GAChBN,MACE,CACEC,MAAM,GAAD,OAAKf,EAAL,UANJmB,UAef,wBACEZ,SAAUV,EAAWC,GAAaM,EAAOO,SAAWT,EACpDI,UAAU,SACVE,KAAK,SACLC,QAvEgB,WAClBP,GAAYL,IAAaO,EAAOO,OAASb,EAC3C,EAAKY,SAAS,CACZb,SAAU,IAGZ,EAAKa,SAAS,CACZb,SAAUe,KAAKW,IAAI1B,EAAWE,EAAMK,EAAOO,OAASb,MA4DpD,SAMG,SAIL,wBAAOQ,UAAU,kBAAjB,gCAEE,uBACEE,KAAK,QACLgB,MAAOxB,EACPuB,IAAK,GACLV,IAAK,IACLY,SAAU,SAACC,GACT,EAAKhB,SAAS,CAAEV,UAAW2B,OAAOD,EAAME,cAAcJ,eAK5D,wBAAOlB,UAAU,kBAAjB,iCAEE,uBACEE,KAAK,SACLgB,MAAO1B,EACPyB,IAAK,EACLV,IAAK,GACLY,SAAU,SAACC,GACT,EAAKhB,SAAS,CAAEZ,UAAW6B,OAAOD,EAAME,cAAcJ,eAK5D,wBAAOlB,UAAU,kBAAjB,sBAEE,uBACEE,KAAK,SACLgB,MAAOzB,EACPwB,IAAK,EACLV,IAAK,GACLY,SAAU,SAACC,GACT,EAAKhB,SAAS,CAAEX,KAAM4B,OAAOD,EAAME,cAAcJ,eAKvD,wBAAOlB,UAAU,kBAAjB,uCAEE,uBACEE,KAAK,QACLgB,MAAOvB,EACPsB,IAAK,EACLV,IAAK,EACLd,KAAM,GACN0B,SAAU,SAACC,GACT,EAAKhB,SAAS,CACZT,kBAAmB0B,OAAOD,EAAME,cAAcJ,eAMtD,wBAAOlB,UAAU,kBAAjB,sBAEE,uBACEE,KAAK,WACLqB,QAAS3B,EACTuB,SAAU,WACR,EAAKf,SAAS,CACZR,UAAWA,iBAhK3B,GAA8B4B,aCRxBC,E,4MACJnC,MAAQ,CACNQ,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWD,KAAKP,MAAhBQ,OAER,OACE,sBAAKE,UAAU,MAAf,UAEE,gDAAmBF,EAAOO,OAA1B,aAEA,cAAC,EAAD,CAAUP,OAAQA,W,GAxBR4B,IAAMF,WA8BTC,ICnCfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cb76e22b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n}\n\ninterface State {\n  position: number;\n  frameSize: number\n  step: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n    frameSize: 3,\n    step: 3,\n    itemWidth: 130,\n    animationDuration: 1,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      position,\n      step,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.state;\n    const { images } = this.props;\n\n    const handleNextClick = () => {\n      if (infinite && position === images.length - frameSize) {\n        this.setState({\n          position: 0,\n        });\n      } else {\n        this.setState({\n          position: Math.min(position + step, images.length - frameSize),\n        });\n      }\n    };\n\n    const handlePrevClick = () => {\n      if (infinite && position === 0) {\n        this.setState({\n          position: images.length - frameSize,\n        });\n      } else {\n        this.setState({ position: Math.max(position - step, 0) });\n      }\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <div className=\"Carousel__container\">\n          <button\n            disabled={position === 0 && !infinite}\n            className=\"Button\"\n            type=\"button\"\n            onClick={handlePrevClick}\n          >\n            {'<'}\n          </button>\n\n          <div\n            className=\"Carousel__list-container\"\n            style={\n              {\n                width: `${itemWidth * frameSize}px`,\n              }\n            }\n          >\n            <ul\n              className=\"Carousel__list\"\n              style={\n                {\n                  transform: `translateX(-${position * itemWidth}px)`,\n                  transition: `transform ${animationDuration}s`,\n                }\n              }\n            >\n              {images.map((image, index) => (\n                <li key={image}>\n                  <img\n                    src={image}\n                    alt={`${index + 1}`}\n                    style={\n                      {\n                        width: `${itemWidth}px`,\n                      }\n                    }\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <button\n            disabled={position + frameSize >= images.length && !infinite}\n            className=\"Button\"\n            type=\"button\"\n            onClick={handleNextClick}\n          >\n            {'>'}\n          </button>\n        </div>\n\n        <label className=\"Carousel__label\">\n          Set width of items:\n          <input\n            type=\"range\"\n            value={itemWidth}\n            min={90}\n            max={170}\n            onChange={(event) => {\n              this.setState({ itemWidth: Number(event.currentTarget.value) });\n            }}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          Set amount of items:\n          <input\n            type=\"number\"\n            value={frameSize}\n            min={1}\n            max={10}\n            onChange={(event) => {\n              this.setState({ frameSize: Number(event.currentTarget.value) });\n            }}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          Set step:\n          <input\n            type=\"number\"\n            value={step}\n            min={1}\n            max={10}\n            onChange={(event) => {\n              this.setState({ step: Number(event.currentTarget.value) });\n            }}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          Set duration of animation:\n          <input\n            type=\"range\"\n            value={animationDuration}\n            min={0}\n            max={5}\n            step={0.1}\n            onChange={(event) => {\n              this.setState({\n                animationDuration: Number(event.currentTarget.value),\n              });\n            }}\n          />\n        </label>\n\n        <label className=\"Carousel__label\">\n          Infinite:\n          <input\n            type=\"checkbox\"\n            checked={infinite}\n            onChange={() => {\n              this.setState({\n                infinite: !infinite,\n              });\n            }}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}